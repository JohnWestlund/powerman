#!/usr/bin/perl
#
# Call to the Power package's status() function in powerlib.pl
# Usage: slc_stat
# prints a bit vector the length of the cluster
# Andrew Uselton 6/15/01
#
use strict;

# might want to put a path in here
require "powerlib.pl";

use vars qw($node $val %status, @cluster, $EXITERROR $EXITOK $ON $OFF $UNASKED $ASKED $code);
my ($node, $val, %status, @cluster, $EXITERROR, $EXITOK, $ON, $OFF, $UNASKED, $ASKED, $code);

$EXITERROR = 1;
$EXITOK    = 0;
$ON        = 1;
$OFF       = 0;
$UNASKED   = -1;
$ASKED     = 2;
$code      = $EXITOK;

# Remember that "is_on" follows the usual C programming convention with 
# 1 == "True" or "Is on" and 0 == "False"
# The shell convention is the reverse with 0 == "True" or "successfull
# completion" and 1 == "False" or "error condition"


@cluster = Power::power_cluster();
%status  = Power::power_stat();
foreach $node (@cluster)
{ 
    if ($status{$node} == $ON)
    {
	printf "1";
    }
    elsif ($status{$node} == $OFF)
    {
	printf "0";
    }
    elsif ($status{$node} == $UNASKED)
    {
	printf "_";
    }
    else
    {
	printf "?";
    }
}
printf "\n";

exit($EXITOK);


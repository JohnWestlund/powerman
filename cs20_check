#!/usr/bin/perl
#
# Call to the UP2000Power package's node_on() function in up2000_powerlib.pl
# Usage: up2000_check host [host...]
# only the status of the last host is reported via the exit code
# adapted from the original "api_reset" of
# Jim Garlick 2/15/01
# by
# Andrew Uselton 6/5/01
#
use strict;

# might want to put a path in here
require "up2000_powerlib.pl";

use vars qw($node $val $EXITERROR $EXITOK $ON $OFF);
my ($node, $val, $EXITERROR, $EXITOK, $ON, $OFF);

$EXITERROR = 1;
$EXITOK    = 0;
$ON        = 1;
$OFF       = 0;


if (!@ARGV) {
    printf STDERR ("Usage: up2000_check node [node...]\n");
    exit($EXITERROR);
}	

UP2000Power::up2000_power_init(@ARGV);

foreach $node (@ARGV) {

# Remember that "is_on" follows the usual C programming convention with 
# 1 == "True" or "Is on" and 0 == "False"

	$val = UP2000Power::node_on($node);
	if ($val == $ON)
	{ 
	    printf("Node %s appears to be ON\n", $node);
	}
	else
	{
	    printf("Node %s appears to be OFF\n", $node);
	}
}

# The shell convention is the reverse with 0 == "True" or "successfull
# completion" and 1 == "False" or "error condition"

if($val == $ON)
{
    exit $EXITOK;
}
else
{
    exit $EXITERROR;
}

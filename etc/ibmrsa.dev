#
# $Id$
# $Source$
#
# IBM Remote Supervisor Adapter (RSA) 
#
# The RSA is an externally powered PCI adapter with its own ethernet connection
# and an RS485 interface.  The RS485 interface daisy chains up to 20 IBM 
# x-series nodes, including the node hosting the RSA adapter.  The x-series 
# nodes have a service processor, based on the H8 microprocessor and code 
# named "hawk", integrated into the mainboard.  The RSA adapter can forward 
# power on/off/status commands to the hawks via RS485.
# 
# Normally the RSA's provide a web front end which is scripted by IBM's "xcat"
# Linux system software distribution.  PowerMan uses the telnet interface 
# which has an undocumented, line-oriented "debug mode", accessed by typing 
# ctrl-D after logging in to the screen-oriented interface.  The screen-
# oriented telnet menus only export power control capability for the node 
# hosting the RSA adapter, not for those on the RS485 chain.
#
# The capability used by PowerMan was added to RSA firmware for us in April
# 2003.  The initial firmware image files we used were GEET117A.tgz (x345) 
# and T2ET116-.tgz (x335).  The RSA firmware is flashed from Linux using the 
# same utility as BIOS firmware.  Use the "-f" switch to update RSA firmware.
# After you have flashed the RSA firmware, you need to reboot the box.
#
specification {
	name 		"ibmrsa"
	type 		"telnet"
	offstring 	"off"
	onstring  	"on"
	plugcount 	24
	timeout  	20

	script login {
#		send "\IAC\DONT\TELOPT_NAWS\IAC\DONT\TELOPTTTYPE"
		expect "Login ID:"
		send "USERID\r\n"
		send "PASSW0RD\r\n"
		expect "Select" 
		delay 1
		send "\004"  			# ^D to enter "debug mode"
		expect "==> "
	}
	script logout {
		send "\004"  			# ^D to log completely off
	}
	script status {
		send "power 2 %s\r\n"
		expect "Status = (on|off)\r\n"
			map $1 "%s"
	}
	script on {
		send "power 1 %s\r\n"
		expect "Status = on\r\n"
	}
	script off {
		send "power 0 %s\r\n"
		expect "Status = off\r\n"
	}
	script cycle {
		send "power 0 %s\r\n"
		expect "Status = off\r\n"
		delay 2
		send "power 1 %s\r\n"
		expect "Status = on\r\n"
	}
}

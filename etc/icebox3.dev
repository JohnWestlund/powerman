#
# icebox3.dev,v 1.9 2002/10/21 16:42:48 garlick Exp
# /chaos/cvs/powerman/etc/icebox3.dev,v
#
# Linux Networx ICE Box firmware version 3.x
# Requires B68 or greater for mass beacon commands to work (see comment below)
#
begin protocol specification
	specification name "icebox3"
	specification type "TCP"
	off string "0|OFF"		# 0/1 for STATUS and STATUS_SOFT
	on string  "1|ON"		#     and OFF/ON for STATUS_BEACON
	plug count 10
	device timeout 20
	begin LOGIN_SCRIPT
		expect "V3[^\n]*\r\n"
		send "auth icebox\r\n"
		expect "OK\r\n"
	end LOGIN_SCRIPT
	begin LOGOUT_SCRIPT
		send "q\r\n"
	end LOGOUT_SCRIPT
	begin STATUS_SCRIPT
		send "ps *\r\n"
		expect "N1:([01]) N2:([01]) N3:([01]) N4:([01]) N5:([01]) N6:([01]) N7:([01]) N8:([01]) N9:([01]) N10:([01])[[:space:]]*\r\n"
			map $1 "1"
			map $2 "2"
			map $3 "3"
			map $4 "4"
			map $5 "5"
			map $6 "6"
			map $7 "7"
			map $8 "8"
			map $9 "9"
			map $10 "10"
	end STATUS_SCRIPT
	begin STATUS_SOFT_SCRIPT
		send "ns *\r\n"
		expect "N1:([012]) N2:([012]) N3:([012]) N4:([012]) N5:([012]) N6:([012]) N7:([012]) N8:([012]) N9:([012]) N10:([012])[[:space:]]*\r\n"
			map $1 "1"
			map $2 "2"
			map $3 "3"
			map $4 "4"
			map $5 "5"
			map $6 "6"
			map $7 "7"
			map $8 "8"
			map $9 "9"
			map $10 "10"
	end STATUS_SOFT_SCRIPT
	# Assumption: v3 implies that "ts" is deprecated in favor of "is"
        begin STATUS_TEMP_SCRIPT
                send "is *\r\n"
                expect "N1:([^ ]+) N2:([^ ]+) N3:([^ ]+) N4:([^ ]+) N5:([^ ]+) N6:([^ ]+) N7:([^ ]+) N8:([^ ]+) N9:([^ ]+) N10:([^ ]+) N11:[^ ]+ N12:[^ ]+[[:space:]]*\r\n"
                        map $1 "1"
                        map $2 "2"
                        map $3 "3"
                        map $4 "4"
                        map $5 "5"
                        map $6 "6"
                        map $7 "7"
                        map $8 "8"
                        map $9 "9"
                        map $10 "10"
        end STATUS_TEMP_SCRIPT
        begin STATUS_BEACON_SCRIPT
                send "be *\r\n"
                expect "N1:([A-Z]+) N2:([A-Z]+) N3:([A-Z]+) N4:([A-Z]+) N5:([A-Z]+) N6:([A-Z]+) N7:([A-Z]+) N8:([A-Z]+) N9:([A-Z]+) N10:([A-Z]+) N11:[A-Z]+ N12:[A-Z]+[[:space:]]*\r\n"
                        map $1 "1"
                        map $2 "2"
                        map $3 "3"
                        map $4 "4"
                        map $5 "5"
                        map $6 "6"
                        map $7 "7"
                        map $8 "8"
                        map $9 "9"
                        map $10 "10"
        end STATUS_BEACON_SCRIPT
	begin ON_SCRIPT
		send "ph %s\r\n"
		expect "OK\r\n"
		delay 0.7
	end ON_SCRIPT
	begin ON_ALL_SCRIPT
		send "ph *\r\n"
		expect "OK\r\n"
		delay 7
	end ON_ALL_SCRIPT
	begin OFF_SCRIPT
		send "pl %s\r\n"
		expect "OK\r\n"
		delay 0.7
	end OFF_SCRIPT
	begin OFF_ALL_SCRIPT
		send "pl *\r\n"
		expect "OK\r\n"
		delay 7
	end OFF_ALL_SCRIPT
	begin CYCLE_SCRIPT
		send "pl %s\r\n"
		expect "OK\r\n"
		delay 0.7
		send "ph %s\r\n"
		expect "OK\r\n"
		delay 0.7
	end CYCLE_SCRIPT
	begin CYCLE_ALL_SCRIPT
		send "pl *\r\n"
		expect "OK\r\n"
		delay 7
		send "ph *\r\n"
		expect "OK\r\n"
		delay 7
	end CYCLE_ALL_SCRIPT
	begin RESET_SCRIPT
		send "rp %s\r\n"
		expect "OK\r\n"
		delay 0.7
	end RESET_SCRIPT
	begin RESET_ALL_SCRIPT
		send "rp *\r\n"
		expect "OK\r\n"
		delay 7
	end RESET_ALL_SCRIPT
	begin BEACON_ON_SCRIPT
		send "be %s on\r\n"
		expect "OK\r\n"
		#delay 2  # This is required for firmware < B68
	end BEACON_ON_SCRIPT
	begin BEACON_OFF_SCRIPT
		send "be %s off\r\n"
		expect "OK\r\n"
		#delay 2  # This is required for firmware < B68
	end BEACON_OFF_SCRIPT
	plug name "1"
	plug name "2"
	plug name "3"
	plug name "4"
	plug name "5"
	plug name "6"
	plug name "7"
	plug name "8"
	plug name "9"
	plug name "10"
end protocol specification

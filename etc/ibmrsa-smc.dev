#
# $Id$
# $Source$
#
# IBM Remote Supervisor Adapter (RSA) with system management connector 
# attached.
#
# Note: when operating with the system management connector attached, do not 
# include the node hosting the RSA in the RS485 chain.  If you do (and IBM 
# cabled our system that way initially!) then PowerMan will not work right for 
# up to 2m:15s following power-up of the node hosting the RSA.  This is 
# because both the hawk and the RSA will appear as power control targets 
# until the hawk notices the RSA, stops transimitting on the RS485, and the 
# RSA times out its entry.
#
# See comments in ibmrsa.dev.
#
specification "ibmrsa-smc" {
	timeout  	20

	script login {
		expect "Login ID:"
		send "USERID\r\n"
		send "PASSW0RD\r\n"
		expect "Select" 
		delay 1
		send "\004"  			# ^D to enter "debug mode"
		expect "==> "

		send "remotesp\r\n"
		foreachnode {
			expect "[^ ]+[ \(]+([^ \)]+)[\) ]+(Hawk|Condor)[ ]+([0-9A-F]{2})"
			setplugname $3 $1	# <plug> <node>
		}
	}
	script logout {
		send "\004"  			# ^D to log completely off
	}
	script status_all {
		send "power 2 0\r\n"
		foreachnode {
			expect "Server 0x([0-9A-F]{2}) Status = (on|off)"
			setplugstate $1 $2 on="on" off="off"
		}
	}
	script on {
		send "power 1 %s\r\n"
		expect "Status = on"
	}
	script on_all {
		send "power 1 0\r\n"
		foreachnode {
			expect "Server 0x([0-9A-F]{2}) Status = (on|off)"
		}
	}
	script off {
		send "power 0 %s\r\n"
		expect "Status = off"
	}
	script off_all {
		send "power 0 0\r\n"
		foreachnode {
			expect "Server 0x([0-9A-F]{2}) Status = (on|off)"
		}
	}
	script cycle {
		send "power 0 %s\r\n"
		expect "Status = off"
		delay 2
		send "power 1 %s\r\n"
		expect "Status = on"
	}
	script cycle_all {
		send "power 0 0\r\n"
		foreachnode {
			expect "Server 0x([0-9A-F]{2}) Status = (on|off)"
		}
		delay 2
		send "power 1 0\r\n"
		foreachnode {
			expect "Server 0x([0-9A-F]{2}) Status = (on|off)"
		}
	}
}

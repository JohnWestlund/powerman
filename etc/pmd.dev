####################################################################
# $Id$
# by Andrew C. Uselton <uselton2@llnl.gov> 
####################################################################
#   Copyright (C) 2001-2002 The Regents of the University of California.
#   Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#   Written by Andrew Uselton (uselton2@llnl.gov>
#   UCRL-CODE-2002-008.
#   
#   This file is part of PowerMan, a remote power management program.
#   For details, see <http://www.llnl.gov/linux/powerman/>.
#   
#   PowerMan is free software; you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free
#   Software Foundation; either version 2 of the License, or (at your option)
#   any later version.
#   
#   PowerMan is distributed in the hope that it will be useful, but WITHOUT 
#   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
#   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
#   for more details.
#   
#   You should have received a copy of the GNU General Public License along
#   with PowerMan; if not, write to the Free Software Foundation, Inc.,
#   59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
####################################################################
begin protocol specification
	specification name "powermand"
	specification type "PMD"
	off string "0"
	on string  "1"
	all string "*"
# PMD type devices are a special case.  size is determined dynamically
#	size "0"
	string interpretation mode "REGEX"
	begin PM_LOG_IN 
		expect "word> " "> "
		send "powerman\r\n"
		expect "Man> " "> "
	end PM_LOG_IN
	begin PM_CHECK_LOGIN
		send "check login\r\n"
		expect "Man> " "> "
	end PM_CHECK_LOGIN
	begin PM_LOG_OUT
		send "quit\r\n"
	end PM_LOG_OUT
	begin PM_UPDATE_PLUGS 
		send "update plugs\r\n"
		expect "Man> " "> "
			map "0" "0"
	end PM_UPDATE_PLUGS 
	begin PM_UPDATE_NODES 
		send "update nodes\r\n"
		expect "Man> " "> "
			map "0" "0"
	end PM_UPDATE_NODES 
	begin PM_POWER_ON
		send "on %s\r\n"
		expect "Man> " "> "
	end PM_POWER_ON
	begin PM_POWER_OFF
		send "off %s\r\n"
		expect "Man> " "> "
	end PM_POWER_OFF
	begin PM_POWER_CYCLE
		send "cycle %s\r\n"
		expect "Man> " "> "
	end PM_POWER_CYCLE
	begin PM_RESET
		send "reset %s\r\n"
		expect "Man> " "> "
	end PM_RESET
# PMD type devices are a special case.  plug names are determined dynamically
end protocol specification

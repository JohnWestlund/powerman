####################################################################
# $Id$
# by Andrew C. Uselton <uselton2@llnl.gov> 
####################################################################
#   Copyright (C) 2001-2002 The Regents of the University of California.
#   Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#   Written by Andrew Uselton (uselton2@llnl.gov>
#   UCRL-CODE-2002-008.
#   
#   This file is part of PowerMan, a remote power management program.
#   For details, see <http://www.llnl.gov/linux/powerman/>.
#   
#   PowerMan is free software; you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free
#   Software Foundation; either version 2 of the License, or (at your option)
#   any later version.
#   
#   PowerMan is distributed in the hope that it will be useful, but WITHOUT 
#   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
#   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
#   for more details.
#   
#   You should have received a copy of the GNU General Public License along
#   with PowerMan; if not, write to the Free Software Foundation, Inc.,
#   59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
####################################################################
# Tested the following firmware versions: 
#    v3.02
# Assumes: 
# 1. password: "wti" (/g general parms, 1 system passwd)
# 2. command echo: on (/g general parms, 6 command echo)
# 3. command confirmation: off (/g general parms, 8 command confirmation)
# 4. disconnect timeout: default of 2 minutes
# Note: prompt is not returned until device is ready to accept another command
#
begin protocol specification
	specification name "wti"
	specification type "TCP"
	off string "OFF"
	on string  "ON"
	all string "*"
	plug count 8
	device timeout 22  # "/boot *" command takes about 20 sec
	begin LOGIN_SCRIPT
		expect "\n"
		send "\IAC\DO\TELOPT_ECHO\IAC\DO\TELOPT_SGA\IAC\DONT\TELOPT_TTYPE"
		expect "word: "
		send "wti\r\n"
		expect "NPS> "
	end LOGIN_SCRIPT
	begin LOGOUT_SCRIPT
		send "/x\r\n"
	end LOGOUT_SCRIPT
	begin STATUS_SCRIPT
		send "/s\r\n"
		expect "Default"
		expect "\\+\r\n"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "1"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "2"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "3"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "4"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "5"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "6"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "7"
		expect "[^\n]*(ON|OFF)[^\n]*(ON|OFF)[^\n]*\r\n"
			map $1 "8"
		expect "\\+\r\n"
		expect "NPS> "
	end STATUS_SCRIPT
	begin ON_SCRIPT
		send "/on %s\r\n"
		expect "NPS> "
	end ON_SCRIPT
	begin OFF_SCRIPT
		send "/off %s\r\n"
		expect "NPS> "
	end OFF_SCRIPT
	begin CYCLE_SCRIPT
		send "/boot %s\r\n"
		expect "NPS> "
	end CYCLE_SCRIPT
	plug name "1"
	plug name "2"
	plug name "3"
	plug name "4"
	plug name "5"
	plug name "6"
	plug name "7"
	plug name "8"
end protocol specification

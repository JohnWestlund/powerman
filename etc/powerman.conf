####################################################################
# $Id$
# by Andrew C. Uselton <uselton2@llnl.gov> 
# Copyright (C) 2001 Regents of the University of California
# See ./DISCLAIMER
####################################################################
#
# Config file for the PowerMan daemon
#
# A PowerMan config file consists of four sections:
#   o Device Specification List
#   o Global Configuration
#   o Device List
#   o Node List 
#
# Each section comprises several fields of the form 
#	<keyword(s)> <strings>
# Key words are always lower-case and unquoted, and strings are 
# always quoted.  The quoted strings give values to the fields 
# identified by the keyword(s).  Key words and strings are free 
# format and white space delimitted, though by convention there is 
# one field with its stirng(s) per line, and lines are indented in 
# subsections.  The grammar for the configuration file parser 
# requires the four sections to be in order.  Additional constriants 
# will be mentioned below.
#
#################################################################
# Device Specification
#################################################################
#
#   The device specification lists all the kinds of device that 
# may be used later in the Device List.  Each specification has
# a few general configuration details, a list of scripts - each
# of which details how a particular device command is carried
# out - and a list of plugs.
#
#   include "<path>"
# An include directive may appear anywhere in the configuration file
# but is most commonly used (one each) for one or more device 
# specification files (.dev files), where a .dev file holds the 
# entirety of one device specification.  See the individual .dev 
# files for hints on their contents.  
#
# The path must be absolute, since one may not make assumptions 
# about the value of the current working directory in the daemon.
#
include "/etc/powerman/icebox.dev"
include "/etc/powerman/wti.dev"
include "/etc/powerman/baytech.dev"
#
#################################################################
# Global Configuration
#################################################################
#
#   The global configuration must start with a "cluster name"
# field.  The string can be anything, though obvious pathologies
# should probably be avoided (no nonprinting characters, length
# no greater than a single 80 character line).  The remaining 
# fields in the global section can be in any order and some have
# defaults.  
#
begin global
#   cluster name "<string>" 
# This field must be first.  The physical limit on the string's
# length is somewhere around 64k bytes, but as a practical matter 
# should fit easily on an 80 character line.  It can be anything,
# and the value is not used at present, though it may in future 
# versions.
#
	cluster name "tux"
#
#   log file "<path>" "<level>"
# This field is optional.  If included, the path should be 
# absolute, since one may not make assumptions about the 
# value of the current working directory in the daemon.  Level
# is a non-negative integer.  Each log-able message in the 
# daemon is associated with a log-level value, and messags with
# log-level greater than the level listed here will not be
# printed.
#
	log file "/tmp/powermand.log" "0"
#
#   client listener port "<port>"
# This field is required.  Port is the well-known port value 
# on which the daemon will listen for new connections.  For now
# it must be a number.  A service name of "powerman" is planned.
#
	client listener port "10101"
#
#   timeout interval "<float>"
# This field is optional and defaults to 1.0 second.  At present
# the parse wants both the mantissa and the fraction even in the
# case that one or the other is zero.  The value "0.0" is legal
# and will induce the daemon to poll.  The values ".0" and "1."
# will not be interpreted correctly in the current version of the 
# parser.  The value controls the main select loop in the dameon.
# it should be a small value for responsiveness. 
#
	timeout interval "1.0"
#
#   inter-device delay "<float>"
# This field is optional and defaults to 0.2 seconds.  See the 
# comments above about formatting floats for the parser.  This 
# value paces how frequently the daemon will send commands to
# power control devices.  The daemon pauses for <float> seconds
# after each command.  This may safely be set to zero in small 
# clusters, but in a very large cluster one may want to pace
# power on/off commands to avoid surges.  Unfortunately the
# implementation for the delay has difficulty pausing for less
# than about 0.01 seconds.  If the cluster is very large 
# commands may be quite slow.
#
	inter-device delay "0.0"
#
#   update interval "<float>"
# This field is optinal and defaults to 100.0 seconds.  See the 
# comments above about formatting floats for the parser.  If 
# no client has made any request of the daemon for this interval
# then the daemon will spontaneously request hard and soft
# power power status from all nodes in the cluster.
#
	update interval "100.0"
#
end global
#
#################################################################
# Device List
#################################################################
#
# This section has a list (only one in this case) of device
# entries.  There is a separate entry for each physical device.
#
#   device "<DevName>" "<SpecName>" "<hostname>" "<port>"
# A device entry is required for each physical device used for
# power monitoring and/or power control.
# o  The DevName field identifies this particular device and is how
#    the nodes section below refers to it.  
# o  The SpecName field identifies which device specification from
#    the list above (in one of the .dev files) characterizes this 
#    device.
# o  The hostname field gives the host name that will be the 
#    target of communications.
# o  The port is the number for the well-know port on which the 
#    device is listening for connections.  Named services will
#    be supported in a future version.
# The combination of hostaname and port must be unique for each 
# device, as must be the Name it is given.
#
device "Icebox" "icebox" "localhost" "1010"
#
#################################################################
# Node List
#################################################################
#
# This section has a list of the nodes in the cluster.  There is
# a separate entry for each node.
#
#   node "<NodeName>" "<DevName>" "<plug>" ["<DevName>" "<plug>"]
# A node entry is required for each node in the cluster.  The 
# second DevName, plug pair is for systems with separate devices 
# for hard power control and monitoring (the first pair) and soft 
# power monitoring (the second pair).
# o  The NodeName is the name by which the node is known in the 
#    cluster, which may be an indexed name as shown here, but 
#    does not have to be.
# o  The DevName must match a device entry.  It is the device the 
#    the node is plugged into.
# o  The plug field identifies the unique position on the device
#    for that node. It is often a number but does not have to be.
#    It must correspond to one of the plug entries from the 
#    device specification for the device DevName.
#
begin nodes
	node "tux0" "Icebox" "1"
	node "tux1" "Icebox" "2"
	node "tux2" "Icebox" "3"
	node "tux3" "Icebox" "4"
	node "tux4" "Icebox" "5"
	node "tux5" "Icebox" "6"
	node "tux6" "Icebox" "7"
	node "tux7" "Icebox" "8"
	node "tux8" "Icebox" "9"
	node "tux9" "Icebox" "10"
end nodes
#
#################################################################
# End of "powerman.conf" the PowerMan Configuration File
#################################################################

# 
# $Id$
#
# This device configuration supports power control via the 
# 'ipmipower' utility.
#
# some IPMI devices require some time for the firmware to
# reload/re-settle itself after a power-off.  A delay of 5 seconds
# seems to work fine pretty well.
#
specification "ipmipower" {
	timeout  	60

	script login {
		expect "ipmipower> "
	}
	script logout {
		send "quit\n"
	}
	script status_all {
		send "stat\n"
		foreachnode {
			expect "([^\r\n:]*): ([[:alnum:]|[:space:]|_]+\r\n)"
			setplugstate $1 $2 on="^on\r\n" off="^off\r\n"
		}
		expect "ipmipower> "
	}
	script status {
		send "stat %s\n"
		expect "([^\r\n:]*): ([[:alpha:]|[:space:]|_]+\r\n)"
		setplugstate $1 $2 on="^on\r\n" off="^off\r\n"
		expect "ipmipower> "
	}
	script on {
		send "on %s\n"
		expect "ipmipower> "
	}
	script on_ranged {
		send "on %s\n"
		expect "ipmipower> "
	}
	script on_all {
		send "on\n"
		expect "ipmipower> "
	}
	script off {
		send "off %s\n"
		expect "ipmipower> "
	}
	script off_ranged {
		send "off %s\n"
		expect "ipmipower> "
	}
	script off_all {
		send "off\n"
		expect "ipmipower> "
	}
	script cycle {
		send "off %s\n"
		expect "ipmipower> "
		delay 5
		send "on %s\n"
		expect "ipmipower> "
	}
	script cycle_ranged {
		send "off %s\n"
		expect "ipmipower> "
		delay 5
		send "on %s\n"
		expect "ipmipower> "
	}
	script cycle_all {
		send "off\n"
		expect "ipmipower> "
		delay 5
		send "on\n"
		expect "ipmipower> "
	}
	script reset {
		send "off %s\n"
		expect "ipmipower> "
		delay 5
		send "on %s\n"
		expect "ipmipower> "
	}
	script reset_ranged {
		send "off %s\n"
		expect "ipmipower> "
		delay 5
		send "on %s\n"
		expect "ipmipower> "
	}
	script reset_all {
		send "off\n"
		expect "ipmipower> "
		delay 5
		send "on\n"
		expect "ipmipower> "
	}
}
